import testUsers from '@webex/test-helper-test-users';
import {flaky} from '@webex/test-helper-mocha';
import {expect} from 'chai';

describe('Call With Screenshare', () => {
  describe('normal dialing', () => {
    let mccoy, spock;

    before('create test users', () => testUsers.create({count: 2})
      .then((users) => {
        [spock, mccoy] = users;
        // Adding pause to let test users propagate through integration
        browser.pause(2500);
      }));

    before('reload browser', () => {
      browser.refresh();
    });

    it('loads the app', () => {
      browser.url('/browser-call-with-screenshare');
      browser.$('#access-token').waitForExist({timeout: 1500});
    });

    it('connects mccoy\'s browser', () => {
      expect(browserChrome.getTitle()).to.equal('Sample: Local Screensharing');
      browserChrome.execute((token) => {
        // eslint-disable-next-line no-undef
        document.querySelector('[placeholder="Your access token"]').value += token;
      }, mccoy.token.access_token);
      browserChrome.$('#connect').click();
      browserChrome.$('.listening').waitForExist();
    });

    it('connects spock\'s browser', () => {
      expect(browserFirefox.getTitle()).to.equal('Sample: Local Screensharing');
      browserFirefox.execute((token) => {
        // eslint-disable-next-line no-undef
        document.querySelector('[placeholder="Your access token"]').value += token;
      }, spock.token.access_token);
      browserFirefox.$('#connect').click();
      browserFirefox.$('.listening').waitForExist();
    });

    it('places call from spock to mccoy', () => {
      browserFirefox.$('[placeholder="Person ID or Email Address or SIP URI or Room ID"]').setValue(mccoy.emailAddress);
      browserFirefox.$('[title="dial"]').click();

      browserFirefox.waitUntil(() =>
        (browserFirefox.$('#call-status-local').getText() === 'IN_MEETING'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for local user to connect to meeting'
      });
    });

    it('joins the call on mccoy', () => {
      browserChrome.waitUntil(() => {
        try {
          const alerttext = browserChrome.getAlertText();

          return alerttext === 'Answer incoming call';
        }
        catch (error) {
          // Error is thrown when alert isn't open which is fine
          return false;
        }
      }, {
        timeout: 10000,
        timeoutMsg: 'Timed out waiting for incoming call alert'
      });
      browserChrome.acceptAlert();
      browserFirefox.waitUntil(() =>
        (browserFirefox.$('#call-status-remote').getText() === 'IN_MEETING'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for remote user to connect to meeting'
      });
    });

    it('starts screensharing', () => {
      browserFirefox.$('button[title="share screen"]').click();

      browserFirefox.waitUntil(() =>
        (browserFirefox.$('#screenshare-tracks').getText() === 'SHARING'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for screenshare to start'
      });
    });

    it('stops screensharing', () => {
      // Pausing for screenshare to establish because we don't currently have stream stats displayed
      browser.pause(2500);
      browserFirefox.$('button[title="stop screen share"]').click();
      browserFirefox.waitUntil(() =>
        (browserFirefox.$('#screenshare-tracks').getText() === 'STOPPED'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for screenshare to stop'
      });
    }, 4);

    it('starts screensharing remote', () => {
      browserChrome.$('button[title="share screen"]').click();

      browserChrome.waitUntil(() =>
        (browserChrome.$('#screenshare-tracks').getText() === 'SHARING'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for screenshare to start'
      });
    });

    flaky(it, process.env.SKIP_FLAKY_TESTS)('stops screensharing remote', () => {
      // Pausing for screenshare to establish because we don't currently have stream stats displayed
      browser.pause(2500);
      browserChrome.$('button[title="stop screen share"]').click();
      browserChrome.waitUntil(() =>
        (browserChrome.$('#screenshare-tracks').getText() === 'STOPPED'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for screenshare to stop'
      });
    });

    it('ends the call', () => {
      browserFirefox.$('[title="hangup"]').click();
      browserFirefox.waitUntil(() =>
        (browserFirefox.$('#call-status-local').getText() === 'NOT_IN_MEETING'),
      {
        timeout: 10000,
        timeoutMsg: 'Timed-out waiting for local user to disconnect from meeting'
      });
    });
  });
});
